# Generated by Django 5.1.7 on 2025-03-25 17:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('um', models.CharField(max_length=50, verbose_name='Unidad de Medida')),
                ('stock', models.PositiveIntegerField(verbose_name='Existencias')),
                ('type', models.CharField(choices=[('product', 'Producto'), ('tool', 'Herramienta')], default='product', max_length=10, verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Artículo',
                'verbose_name_plural': 'Artículos',
            },
        ),
        migrations.CreateModel(
            name='Collaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100, verbose_name='Nombres')),
                ('lastname', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('phone', models.CharField(max_length=15, verbose_name='Celular')),
            ],
            options={
                'verbose_name': 'Colaborador',
                'verbose_name_plural': 'Colaboradores',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=100, verbose_name='Proveedor')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de compra')),
                ('paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Monto Pagado')),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Monto Total')),
                ('is_paid', models.BooleanField(default=True, verbose_name='Pagado')),
            ],
            options={
                'verbose_name': 'Compra',
                'verbose_name_plural': 'Compras',
            },
        ),
        migrations.CreateModel(
            name='SaleProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(default='Ninguno', max_length=100, verbose_name='Cliente')),
                ('kilos', models.IntegerField(default=1, verbose_name='kilos')),
                ('price_kilo', models.DecimalField(decimal_places=2, default=1.0, max_digits=18, verbose_name='Precio de Kilo')),
                ('total', models.DecimalField(decimal_places=2, default=1.0, max_digits=18, verbose_name='Monto')),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Descuento')),
            ],
            options={
                'verbose_name': 'Venta de Producto',
                'verbose_name_plural': 'Ventas de Producto',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('pay_per_day', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Pago por día')),
            ],
            options={
                'verbose_name': 'Tarea',
                'verbose_name_plural': 'Tareas',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Costo unitario')),
                ('units', models.IntegerField(verbose_name='Cantidad')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='apis_.article', verbose_name='Articulo')),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='apis_.purchase', verbose_name='Compra')),
            ],
            options={
                'verbose_name': 'Detalle de Compra',
                'verbose_name_plural': 'Detalles de Compras',
            },
        ),
        migrations.CreateModel(
            name='ToolMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(blank=True, max_length=100, null=True, verbose_name='Técnico')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Costo')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Reparación')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenances', to='apis_.article', verbose_name='Herramienta')),
            ],
            options={
                'verbose_name': 'Mantenimiento de Herramienta',
                'verbose_name_plural': 'Mantenimientos de Herramientas',
            },
        ),
        migrations.CreateModel(
            name='WorkingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Descuento')),
                ('pay', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Pago')),
                ('paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Monto Pagado')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Monto Pendiente')),
                ('use_own_tool', models.BooleanField(default=True, verbose_name='Usa Herramienta Propia')),
                ('tool_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Descuento por herramienta')),
                ('is_done', models.BooleanField(default=False, verbose_name='Concluida')),
                ('is_canceled', models.BooleanField(default=False, verbose_name='Cancelada')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observacion')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Jornada')),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis_.collaborator', verbose_name='Colaborador')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis_.task', verbose_name='Tarea')),
            ],
            options={
                'verbose_name': 'Jornada de Trabajo',
                'verbose_name_plural': 'Jornadas de Trabajo',
            },
        ),
        migrations.CreateModel(
            name='WorkingDayResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('units', models.IntegerField(verbose_name='Cantidad')),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apis_.article', verbose_name='Recurso')),
                ('working_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis_.workingday', verbose_name='Jornada laboral')),
            ],
            options={
                'verbose_name': 'Recurso de Jornada de Trabajo',
                'verbose_name_plural': 'Recursos de Jornadas de Trabajo',
            },
        ),
    ]
